// DO NOT EDIT: This file is automatically generated.
//
// Only the associated template file should be edited directly.
// Helper class files are automatically regenerated from the template
// files at various times, including record actions and test object
// insertion actions.  Any changes made directly to a helper class
// file will be lost when automatically updated.

package resources;

import com.rational.test.ft.object.interfaces.*;
import com.rational.test.ft.object.interfaces.SAP.*;
import com.rational.test.ft.object.interfaces.WPF.*;
import com.rational.test.ft.object.interfaces.siebel.*;
import com.rational.test.ft.object.interfaces.flex.*;
import com.rational.test.ft.object.interfaces.dojo.*;
import com.rational.test.ft.object.interfaces.generichtmlsubdomain.*;
import com.rational.test.ft.script.*;
import com.rational.test.ft.vp.IFtVerificationPoint;
import com.ibm.rational.test.ft.object.interfaces.sapwebportal.*;
/**
 * Script Name   : <b>Large_group_Member</b><br>
 * Generated     : <b>2019/07/05 6:41:06 PM</b><br>
 * Description   : Helper class for script<br>
 * Original Host : Windows 10 amd64 10.0 <br>
 * 
 * @since  July 05, 2019
 * @author AG18664
 */
public abstract class Large_group_MemberHelper extends RationalTestScript
{
	/**
	 * ConnectUsingTheCurrentConnectionProperties: with default state.
	 *		toolTipText : Connect Using the Current Connection Properties
	 * 		.class : javax.swing.JButton
	 * 		accessibleContext.accessibleName : &Connect
	 * 		iconDescription : &Connect
	 * 		.classIndex : 4
	 */
	protected GuiTestObject connectUsingTheCurrentConnecti() 
	{
		return new GuiTestObject(
                        getMappedTestObject("connectUsingTheCurrentConnecti"));
	}
	/**
	 * ConnectUsingTheCurrentConnectionProperties: with specific test context and state.
	 *		toolTipText : Connect Using the Current Connection Properties
	 * 		.class : javax.swing.JButton
	 * 		accessibleContext.accessibleName : &Connect
	 * 		iconDescription : &Connect
	 * 		.classIndex : 4
	 */
	protected GuiTestObject connectUsingTheCurrentConnecti(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("connectUsingTheCurrentConnecti"), anchor, flags);
	}
	
	/**
	 * Field_10_32: with default state.
	 *		.startRow : 10
	 * 		.startCol : 32
	 * 		.text :        
	 * 		.length : 7
	 * 		.class : com.ibm.eNetwork.ECL.ECLField
	 */
	protected TextGuiTestObject field_10_32() 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("field_10_32"));
	}
	/**
	 * Field_10_32: with specific test context and state.
	 *		.startRow : 10
	 * 		.startCol : 32
	 * 		.text :        
	 * 		.length : 7
	 * 		.class : com.ibm.eNetwork.ECL.ECLField
	 */
	protected TextGuiTestObject field_10_32(TestObject anchor, long flags) 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("field_10_32"), anchor, flags);
	}
	
	/**
	 * Field_14_20: with default state.
	 *		.startRow : 14
	 * 		.startCol : 20
	 * 		.text :         
	 * 		.length : 8
	 * 		.class : com.ibm.eNetwork.ECL.ECLField
	 */
	protected TextGuiTestObject field_14_20() 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("field_14_20"));
	}
	/**
	 * Field_14_20: with specific test context and state.
	 *		.startRow : 14
	 * 		.startCol : 20
	 * 		.text :         
	 * 		.length : 8
	 * 		.class : com.ibm.eNetwork.ECL.ECLField
	 */
	protected TextGuiTestObject field_14_20(TestObject anchor, long flags) 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("field_14_20"), anchor, flags);
	}
	
	/**
	 * Field_1_1: with default state.
	 *		.startRow : 1
	 * 		.startCol : 1
	 * 		.text :                                                                                  ...
	 * 		.length : 1840
	 * 		.class : com.ibm.eNetwork.ECL.ECLField
	 */
	protected TextGuiTestObject field_1_1() 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("field_1_1"));
	}
	/**
	 * Field_1_1: with specific test context and state.
	 *		.startRow : 1
	 * 		.startCol : 1
	 * 		.text :                                                                                  ...
	 * 		.length : 1840
	 * 		.class : com.ibm.eNetwork.ECL.ECLField
	 */
	protected TextGuiTestObject field_1_1(TestObject anchor, long flags) 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("field_1_1"), anchor, flags);
	}
	
	/**
	 * Field_1_1: with default state.
	 *		.startRow : 1
	 * 		.startCol : 1
	 * 		.text :                                                                                  ...
	 * 		.length : 1920
	 * 		.class : com.ibm.eNetwork.ECL.ECLField
	 */
	protected TextGuiTestObject field_1_1_2() 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("field_1_1_2"));
	}
	/**
	 * Field_1_1: with specific test context and state.
	 *		.startRow : 1
	 * 		.startCol : 1
	 * 		.text :                                                                                  ...
	 * 		.length : 1920
	 * 		.class : com.ibm.eNetwork.ECL.ECLField
	 */
	protected TextGuiTestObject field_1_1_2(TestObject anchor, long flags) 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("field_1_1_2"), anchor, flags);
	}
	
	/**
	 * Field_21_7: with default state.
	 *		.startRow : 21
	 * 		.startCol : 7
	 * 		.text :                                                                          
	 * 		.length : 73
	 * 		.class : com.ibm.eNetwork.ECL.ECLField
	 */
	protected TextGuiTestObject field_21_7() 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("field_21_7"));
	}
	/**
	 * Field_21_7: with specific test context and state.
	 *		.startRow : 21
	 * 		.startCol : 7
	 * 		.text :                                                                          
	 * 		.length : 73
	 * 		.class : com.ibm.eNetwork.ECL.ECLField
	 */
	protected TextGuiTestObject field_21_7(TestObject anchor, long flags) 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("field_21_7"), anchor, flags);
	}
	
	/**
	 * Field_23_2: with default state.
	 *		.startRow : 23
	 * 		.startCol : 2
	 * 		.text :  ECERT MUST BE Y/N FOR NV CASE                                PF06=LASTMBR 
	 * 		.length : 75
	 * 		.class : com.ibm.eNetwork.ECL.ECLField
	 */
	protected TextGuiTestObject field_23_2() 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("field_23_2"));
	}
	/**
	 * Field_23_2: with specific test context and state.
	 *		.startRow : 23
	 * 		.startCol : 2
	 * 		.text :  ECERT MUST BE Y/N FOR NV CASE                                PF06=LASTMBR 
	 * 		.length : 75
	 * 		.class : com.ibm.eNetwork.ECL.ECLField
	 */
	protected TextGuiTestObject field_23_2(TestObject anchor, long flags) 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("field_23_2"), anchor, flags);
	}
	
	/**
	 * Field_23_48: with default state.
	 *		.startRow : 23
	 * 		.startCol : 48
	 * 		.text :                                                                                  ...
	 * 		.length : 113
	 * 		.class : com.ibm.eNetwork.ECL.ECLField
	 */
	protected TextGuiTestObject field_23_48() 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("field_23_48"));
	}
	/**
	 * Field_23_48: with specific test context and state.
	 *		.startRow : 23
	 * 		.startCol : 48
	 * 		.text :                                                                                  ...
	 * 		.length : 113
	 * 		.class : com.ibm.eNetwork.ECL.ECLField
	 */
	protected TextGuiTestObject field_23_48(TestObject anchor, long flags) 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("field_23_48"), anchor, flags);
	}
	
	/**
	 * Field_4_47: with default state.
	 *		.startRow : 4
	 * 		.startCol : 47
	 * 		.text : N00660975
	 * 		.length : 9
	 * 		.class : com.ibm.eNetwork.ECL.ECLField
	 */
	protected TextGuiTestObject field_4_47() 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("field_4_47"));
	}
	/**
	 * Field_4_47: with specific test context and state.
	 *		.startRow : 4
	 * 		.startCol : 47
	 * 		.text : N00660975
	 * 		.length : 9
	 * 		.class : com.ibm.eNetwork.ECL.ECLField
	 */
	protected TextGuiTestObject field_4_47(TestObject anchor, long flags) 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("field_4_47"), anchor, flags);
	}
	
	/**
	 * Field_6_2: with default state.
	 *		.startRow : 6
	 * 		.startCol : 2
	 * 		.text :  
	 * 		.length : 1
	 * 		.class : com.ibm.eNetwork.ECL.ECLField
	 */
	protected TextGuiTestObject field_6_2() 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("field_6_2"));
	}
	/**
	 * Field_6_2: with specific test context and state.
	 *		.startRow : 6
	 * 		.startCol : 2
	 * 		.text :  
	 * 		.length : 1
	 * 		.class : com.ibm.eNetwork.ECL.ECLField
	 */
	protected TextGuiTestObject field_6_2(TestObject anchor, long flags) 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("field_6_2"), anchor, flags);
	}
	
	/**
	 * Host: with default state.
	 *		.class : com.ibm.terminal.tester.gui.misc.AccessibleTextField
	 * 		.priorLabel : Host:
	 * 		accessibleContext.accessibleName : Host:
	 * 		.classIndex : 0
	 */
	protected TextGuiSubitemTestObject host() 
	{
		return new TextGuiSubitemTestObject(
                        getMappedTestObject("host"));
	}
	/**
	 * Host: with specific test context and state.
	 *		.class : com.ibm.terminal.tester.gui.misc.AccessibleTextField
	 * 		.priorLabel : Host:
	 * 		accessibleContext.accessibleName : Host:
	 * 		.classIndex : 0
	 */
	protected TextGuiSubitemTestObject host(TestObject anchor, long flags) 
	{
		return new TextGuiSubitemTestObject(
                        getMappedTestObject("host"), anchor, flags);
	}
	
	/**
	 * IBMExtensionForTerminalBasedApplications: with default state.
	 *		.captionText : IBM Extension for Terminal-based Applications
	 * 		accessibleContext.accessibleRole : frame
	 * 		.class : com.ibm.terminal.tester.gui.panel.TFrame
	 * 		accessibleContext.accessibleName : IBM Extension for Terminal-based Applications
	 */
	protected FTETopLevelTestObject ibmExtensionForTerminalBasedAp() 
	{
		return new FTETopLevelTestObject(
                        getMappedTestObject("ibmExtensionForTerminalBasedAp"));
	}
	/**
	 * IBMExtensionForTerminalBasedApplications: with specific test context and state.
	 *		.captionText : IBM Extension for Terminal-based Applications
	 * 		accessibleContext.accessibleRole : frame
	 * 		.class : com.ibm.terminal.tester.gui.panel.TFrame
	 * 		accessibleContext.accessibleName : IBM Extension for Terminal-based Applications
	 */
	protected FTETopLevelTestObject ibmExtensionForTerminalBasedAp(TestObject anchor, long flags) 
	{
		return new FTETopLevelTestObject(
                        getMappedTestObject("ibmExtensionForTerminalBasedAp"), anchor, flags);
	}
	
	

	protected Large_group_MemberHelper()
	{
		setScriptName("Large_group_Member");
	}
	
}

